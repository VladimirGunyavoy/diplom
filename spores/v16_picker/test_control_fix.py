#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –ª–∏–Ω–∫–∞—Ö –ø–∏–∫–µ—Ä–∞.
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

import numpy as np
from src.core.spore import Spore
from src.visual.link import Link
from src.managers.color_manager import ColorManager
from src.managers.zoom_manager import ZoomManager
from src.logic.pendulum import PendulumSystem

def test_link_control_storage():
    """–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤ –ª–∏–Ω–∫–µ."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤ –ª–∏–Ω–∫–µ...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    pendulum = PendulumSystem()
    color_manager = ColorManager()
    zoom_manager = ZoomManager()
    config = {}
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–ø–æ—Ä—ã
    parent_spore = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.0, 0.0]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    child_spore = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.1, 0.1]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    # –°–æ–∑–¥–∞–µ–º –ª–∏–Ω–∫
    link = Link(
        parent_spore=parent_spore,
        child_spore=child_spore,
        color_manager=color_manager,
        zoom_manager=zoom_manager,
        config=config
    )
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
    test_control = 2.5
    test_dt = 0.1
    
    link.control_value = test_control
    link.dt_value = test_dt
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
    assert hasattr(link, 'control_value'), "–õ–∏–Ω–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç control_value"
    assert hasattr(link, 'dt_value'), "–õ–∏–Ω–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç dt_value"
    assert link.control_value == test_control, f"–û–∂–∏–¥–∞–ª–æ—Å—å control_value={test_control}, –ø–æ–ª—É—á–µ–Ω–æ {link.control_value}"
    assert link.dt_value == test_dt, f"–û–∂–∏–¥–∞–ª–æ—Å—å dt_value={test_dt}, –ø–æ–ª—É—á–µ–Ω–æ {link.dt_value}"
    
    print("‚úÖ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –≤ –ª–∏–Ω–∫–µ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    print(f"   control_value: {link.control_value}")
    print(f"   dt_value: {link.dt_value}")

def test_picker_control_retrieval():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏–∑ –ª–∏–Ω–∫–∞ –≤ –ø–∏–∫–µ—Ä–µ."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏–∑ –ª–∏–Ω–∫–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    pendulum = PendulumSystem()
    color_manager = ColorManager()
    zoom_manager = ZoomManager()
    config = {}
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–ø–æ—Ä—ã
    parent_spore = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.0, 0.0]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    child_spore = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.1, 0.1]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    # –°–æ–∑–¥–∞–µ–º –ª–∏–Ω–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
    link = Link(
        parent_spore=parent_spore,
        child_spore=child_spore,
        color_manager=color_manager,
        zoom_manager=zoom_manager,
        config=config
    )
    
    test_control = -1.8
    test_dt = -0.05
    
    link.control_value = test_control
    link.dt_value = test_dt
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–∏–∫–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if hasattr(link, 'control_value'):
        control = link.control_value
        control_source = "link"
    elif hasattr(parent_spore, 'logic'):
        control = getattr(parent_spore.logic, 'optimal_control', 'N/A')
        control_source = "spore"
    else:
        control = 'N/A'
        control_source = "none"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    assert control_source == "link", f"–û–∂–∏–¥–∞–ª—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫ 'link', –ø–æ–ª—É—á–µ–Ω '{control_source}'"
    assert control == test_control, f"–û–∂–∏–¥–∞–ª–æ—Å—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {test_control}, –ø–æ–ª—É—á–µ–Ω–æ {control}"
    
    print("‚úÖ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏–∑ –ª–∏–Ω–∫–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {control_source}")
    print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {control}")
    print(f"   –ó–Ω–∞–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {'+' if control > 0 else '-' if control < 0 else '0'}")

def test_positive_and_negative_controls():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    pendulum = PendulumSystem()
    color_manager = ColorManager()
    zoom_manager = ZoomManager()
    config = {}
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    parent_spore_pos = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.0, 0.0]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    child_spore_pos = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.1, 0.1]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    link_pos = Link(
        parent_spore=parent_spore_pos,
        child_spore=child_spore_pos,
        color_manager=color_manager,
        zoom_manager=zoom_manager,
        config=config
    )
    
    link_pos.control_value = 2.0
    link_pos.dt_value = 0.1
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    parent_spore_neg = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([0.0, 0.0]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    child_spore_neg = Spore(
        pendulum=pendulum,
        initial_position_2d=np.array([-0.1, -0.1]),
        goal_position_2d=np.array([1.0, 1.0])
    )
    
    link_neg = Link(
        parent_spore=parent_spore_neg,
        child_spore=child_spore_neg,
        color_manager=color_manager,
        zoom_manager=zoom_manager,
        config=config
    )
    
    link_neg.control_value = -2.0
    link_neg.dt_value = -0.1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞–∫–∏
    assert link_pos.control_value > 0, f"–û–∂–∏–¥–∞–ª–æ—Å—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–æ {link_pos.control_value}"
    assert link_neg.control_value < 0, f"–û–∂–∏–¥–∞–ª–æ—Å—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–æ {link_neg.control_value}"
    
    print("‚úÖ –¢–µ—Å—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
    print(f"   –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {link_pos.control_value}")
    print(f"   –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {link_neg.control_value}")
    print(f"   –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {link_pos.dt_value}")
    print(f"   –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {link_neg.dt_value}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –ª–∏–Ω–∫–∞—Ö –ø–∏–∫–µ—Ä–∞...")
    
    try:
        test_link_control_storage()
        test_picker_control_retrieval()
        test_positive_and_negative_controls()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –ª–∏–Ω–∫–∞—Ö –ø–∏–∫–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


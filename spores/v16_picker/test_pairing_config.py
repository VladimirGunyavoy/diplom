#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è
"""

import json
import os

def test_pairing_config():
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –°–ü–ê–†–ò–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    # –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
    config_path = "v15_5_tree_opt/config/json/config.json"
    
    print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª: {config_path}")
    
    if os.path.exists(config_path):
        print("‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        with open(config_path, 'r') as f:
            config = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é tree.pairing
        tree_config = config.get('tree', {})
        pairing_config = tree_config.get('pairing', {})
        
        print(f"\nüìä –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è:")
        print(f"   enabled: {pairing_config.get('enabled', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   show_debug: {pairing_config.get('show_debug', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   dt_grandchildren_factor: {pairing_config.get('dt_grandchildren_factor', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   max_pairs: {pairing_config.get('max_pairs', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   min_distance_threshold: {pairing_config.get('min_distance_threshold', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   max_distance_threshold: {pairing_config.get('max_distance_threshold', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   time_precision: {pairing_config.get('time_precision', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        print(f"   position_precision: {pairing_config.get('position_precision', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
        required_params = [
            'enabled', 'show_debug', 'dt_grandchildren_factor', 'max_pairs',
            'min_distance_threshold', 'max_distance_threshold', 'time_precision', 'position_precision'
        ]
        missing_params = [param for param in required_params if param not in pairing_config]
        
        if missing_params:
            print(f"\n‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {missing_params}")
            print("   –î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Å–µ–∫—Ü–∏—é tree.pairing –≤ config.json")
        else:
            print(f"\n‚úÖ –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –∫–ª–∞–≤–∏—à–∞–º–∏ 'P' –∏ 'O'
        print(f"\nüîç –†–ê–ó–õ–ò–ß–ò–Ø –ú–ï–ñ–î–£ –ö–õ–ê–í–ò–®–ê–ú–ò 'P' –ò 'O':")
        print(f"   –ö–ª–∞–≤–∏—à–∞ 'P' (—Å–ø–∞—Ä–∏–≤–∞–Ω–∏–µ):")
        print(f"     - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç find_optimal_pairs()")
        print(f"     - –ü—Ä–∏–º–µ–Ω—è–µ—Ç dt –∏–∑ meeting_info")
        print(f"     - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞–∫–∏ dt")
        print(f"     - –û–±–Ω–æ–≤–ª—è–µ—Ç ghost_tree_dt_vector")
        print(f"     - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ tree.pairing")
        
        print(f"\n   –ö–ª–∞–≤–∏—à–∞ 'O' (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è):")
        print(f"     - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç optimize_tree_area()")
        print(f"     - –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø–ª–æ—â–∞–¥—å –¥–µ—Ä–µ–≤–∞")
        print(f"     - –ü—Ä–∏–º–µ–Ω—è–µ—Ç constraint_distance")
        print(f"     - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç optimized_dt_vector")
        print(f"     - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ tree.area_optimization")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–Ω—Ñ–∏–≥–∞
        print(f"\nüìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        print(json.dumps(config, indent=2, ensure_ascii=False))
        
    else:
        print("‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª config.json –≤ –ø–∞–ø–∫–µ v15_5_tree_opt/config/json/")

def test_bridge_pairing_integration():
    print(f"\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –°–ü–ê–†–ò–í–ê–ù–ò–Ø –° –ú–û–°–¢–û–ú")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ—Å—Ç
        import sys
        sys.path.append('v15_5_tree_opt/src')
        
        from logic.tree.tree_area_bridge import _load_pairing_config
        
        print("‚úÖ –ú–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è
        pairing_config = _load_pairing_config()
        
        print(f"\nüìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –º–æ—Å—Ç–æ–º:")
        for key, value in pairing_config.items():
            print(f"   {key}: {value}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        dt_grandchildren_factor = pairing_config.get('dt_grandchildren_factor', None)
        if dt_grandchildren_factor is not None:
            print(f"\n‚úÖ dt_grandchildren_factor –∑–∞–≥—Ä—É–∂–µ–Ω: {dt_grandchildren_factor}")
        else:
            print(f"\n‚ö†Ô∏è  dt_grandchildren_factor –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
            
        show_debug = pairing_config.get('show_debug', None)
        if show_debug is not None:
            print(f"‚úÖ show_debug –∑–∞–≥—Ä—É–∂–µ–Ω: {show_debug}")
        else:
            print(f"‚ö†Ô∏è  show_debug –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    test_pairing_config()
    test_bridge_pairing_integration()
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ config/json/config.json")
    print("   - –ö–ª–∞–≤–∏—à–∏ 'P' –∏ 'O' –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞")
    print("   - –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–ø–∞—Ä–∏–≤–∞–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞")
    print("   - –†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ 'P' –∏ 'O' —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã")

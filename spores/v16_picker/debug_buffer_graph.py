#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±—É—Ñ–µ—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∞.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ BufferMergeManager –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è M.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
script_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.append(script_dir)

def check_buffer_manager_debug():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ BufferMergeManager."""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–£–§–ï–†–ù–û–ì–û –ì–†–ê–§–ê")
    print("=" * 50)
    
    print("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ main_demo.py")
    print("2. –ù–∞–∂–º–∏—Ç–µ K (–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –¥–µ—Ä–µ–≤–∞)")
    print("3. –ù–∞–∂–º–∏—Ç–µ O (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)")
    print("4. –ù–∞–∂–º–∏—Ç–µ M (–º–µ—Ä–¥–∂ –≤ –±—É—Ñ–µ—Ä–Ω—ã–π –≥—Ä–∞—Ñ)")
    print("5. –°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏")
    print()
    print("–ò—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö:")
    print("- 'üîó –û–ë–†–ê–ë–û–¢–ö–ê –°–í–Ø–ó–ï–ô' - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –≤ –±—É—Ñ–µ—Ä–Ω–æ–º –≥—Ä–∞—Ñ–µ")
    print("- '‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ X —Å–≤—è–∑–µ–π –∏–∑ –≥—Ä–∞—Ñ–∞' - —ç–∫—Å–ø–æ—Ä—Ç –≤ JSON")
    print("- 'DEBUG: –ì—Ä–∞—Ñ–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç X —Å–≤—è–∑–µ–π' - —Å–æ—Å—Ç–æ—è–Ω–∏–µ spore_manager.graph")
    print()
    print("–ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ:")
    print("- 'üîó –û–ë–†–ê–ë–û–¢–ö–ê –°–í–Ø–ó–ï–ô' –Ω–æ –ø–æ—Ç–æ–º '0 —Å–≤—è–∑–µ–π' ‚Üí –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–µ–π")
    print("- '–ì—Ä–∞—Ñ–∏–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç 0 —Å–≤—è–∑–µ–π' ‚Üí —Å–≤—è–∑–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –≥—Ä–∞—Ñ")
    print("- '–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ 0 —Å–≤—è–∑–µ–π' ‚Üí JSON —ç–∫—Å–ø–æ—Ä—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç —Å–≤—è–∑–∏")
    
    return True

def check_recent_buffer_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏–µ —Ñ–∞–π–ª—ã –±—É—Ñ–µ—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∞."""
    
    buffer_dir = os.path.join(script_dir, 'scripts', 'run', 'buffer')
    
    if not os.path.exists(buffer_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ buffer –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {buffer_dir}")
        return False
    
    print(f"\nüìÅ –§–ê–ô–õ–´ –í –ü–ê–ü–ö–ï BUFFER:")
    
    files = []
    for filename in os.listdir(buffer_dir):
        filepath = os.path.join(buffer_dir, filename)
        if os.path.isfile(filepath):
            stat = os.stat(filepath)
            files.append({
                'name': filename,
                'size': stat.st_size,
                'modified': stat.st_mtime
            })
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
    files.sort(key=lambda x: x['modified'], reverse=True)
    
    for file_info in files:
        import datetime
        mod_time = datetime.datetime.fromtimestamp(file_info['modified'])
        print(f"   üìÑ {file_info['name']}: {file_info['size']} –±–∞–π—Ç, {mod_time}")
    
    return True

if __name__ == '__main__':
    check_buffer_manager_debug()
    check_recent_buffer_files()


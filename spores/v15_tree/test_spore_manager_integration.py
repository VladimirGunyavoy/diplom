#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ IDManager –≤ SporeManager.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def test_spore_manager_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é IDManager –≤ SporeManager."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ IDManager –≤ SporeManager...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from managers.spore_manager import SporeManager
        from managers.id_manager import IDManager
        from managers.color_manager import ColorManager
        from managers.zoom_manager import ZoomManager
        from managers.param_manager import ParamManager
        from logic.pendulum import PendulumSystem
        
        print("   ‚úì –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        pendulum = PendulumSystem()
        zoom_manager = ZoomManager()
        color_manager = ColorManager()
        param_manager = ParamManager()
        
        print("   ‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º SporeManager
        spore_manager = SporeManager(
            pendulum=pendulum,
            zoom_manager=zoom_manager,
            settings_param=param_manager,
            color_manager=color_manager
        )
        
        print("   ‚úì SporeManager —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ id_manager —Å–æ–∑–¥–∞–Ω
        if hasattr(spore_manager, 'id_manager'):
            print(f"   ‚úì IDManager —Å–æ–∑–¥–∞–Ω: {spore_manager.id_manager}")
        else:
            print("   ‚ùå IDManager –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ SporeManager")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ id_manager —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º IDManager
        if isinstance(spore_manager.id_manager, IDManager):
            print("   ‚úì IDManager –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø")
        else:
            print(f"   ‚ùå IDManager –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø: {type(spore_manager.id_manager)}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ get_id_stats
        if hasattr(spore_manager, 'get_id_stats'):
            print("   ‚úì –ú–µ—Ç–æ–¥ get_id_stats –Ω–∞–π–¥–µ–Ω")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = spore_manager.get_id_stats()
            print(f"   üìä –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏
            expected_keys = ['spores_created', 'links_created', 'angels_created', 'pillars_created', 'ghosts_created', 'total_objects']
            for key in expected_keys:
                if key in stats:
                    print(f"   ‚úì –ö–ª—é—á '{key}' –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ")
                else:
                    print(f"   ‚ùå –ö–ª—é—á '{key}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ")
                    return False
        else:
            print("   ‚ùå –ú–µ—Ç–æ–¥ get_id_stats –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç id_manager
        if hasattr(spore_manager, 'clear') and hasattr(spore_manager, 'clear_all_manual'):
            print("   ‚úì –ú–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("   ‚ùå –ú–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è IDManager –≤ SporeManager —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_spore_manager_integration()
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\nüí• –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")

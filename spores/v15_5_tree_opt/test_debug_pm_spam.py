#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ–ª–∞–≥–∞ DEBUG_PM_SPAM –≤ PredictionManager.
"""

def test_debug_pm_spam_flag():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Ñ–ª–∞–≥–∞ DEBUG_PM_SPAM."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞ DEBUG_PM_SPAM –≤ PredictionManager")
    print("=" * 60)
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
    try:
        with open('src/managers/manual_creation/prediction_manager.py', 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–ª–∞–≥–∞
        if 'DEBUG_PM_SPAM = False' in content:
            print("‚úÖ –§–ª–∞–≥ DEBUG_PM_SPAM –Ω–∞–π–¥–µ–Ω –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ False")
        else:
            print("‚ùå –§–ª–∞–≥ DEBUG_PM_SPAM –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–µ—Ä–Ω—É—Ç—ã–µ –ª–æ–≥–∏
        wrapped_logs = [
            'if DEBUG_PM_SPAM: print(f"[PM] update_predictions',
            'if DEBUG_PM_SPAM: print("[PM] _update_tree_preview: cleared old predictions")',
            'if DEBUG_PM_SPAM: print(f"[PredictionManager] ghost_dt_vector head:',
            'if DEBUG_PM_SPAM: print(f"[PM] +ghost_link',
            'if DEBUG_PM_SPAM: print(f"[PM] clear_predictions: removing',
            'if DEBUG_PM_SPAM: print("[PM] clear_predictions: done")',
            'if DEBUG_PM_SPAM: print(f"[PM] _get_current_dt ->'
        ]
        
        print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–µ—Ä–Ω—É—Ç—ã—Ö –ª–æ–≥–æ–≤:")
        for log in wrapped_logs:
            if log in content:
                print(f"‚úÖ {log[:50]}...")
            else:
                print(f"‚ùå {log[:50]}... (–ù–ï –ù–ê–ô–î–ï–ù)")
                return False
        
        print("\n‚úÖ –í—Å–µ –ª–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–µ—Ä–Ω—É—Ç—ã —Ñ–ª–∞–≥–æ–º DEBUG_PM_SPAM!")
        print("üí° –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å–ø–∞–º-–ª–æ–≥–æ–≤ –∏–∑–º–µ–Ω–∏—Ç–µ DEBUG_PM_SPAM = True –≤ prediction_manager.py")
        
        return True
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª prediction_manager.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_debug_pm_spam_flag()
    exit(0 if success else 1)
